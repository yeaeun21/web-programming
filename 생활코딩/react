복잡한 코드 간단하게 만들어 줌

사용자 정의 태그를 만드는 것.

사용자 정의 태그는 부품으로 사용됨

<환경구축>

1. react홈페이지에서 새로운 react앱 만들기
2. create react app클릭>create react app클릭>github에서 오른쪽에 연결된 링크 create-react-app.dev클릭
3. npx create-react-app my-app명령어 확인
4. node.js설치
5. vc에서 터미널 키고 command prompt에서 'npx create-react-app my-app'로 my-app이라는 react app생성
6. 'npx create-react-app .'입력

다음과 같을 경우 'cd my-app'으로 app에 들어가서 npm start해야함
7. 'npm start'로 시작. 종료는 ctrl+c
8. 배포는 'npm run build'로 빌드하고 'serve -s build'로 배포
    
//
<수정>

각 파일 수정 index.js , app.js , app.css , index.css , public>index.html 등

<배포>

1. 터미널에 실행 중인게 있다면 ctrl+c로 종료
2. npm run build 입력
3. npx serve -s build 입력

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/93461efd-20ba-42e3-be95-0c67f5921c15/Untitled.png)

#문제상황 : 변경사항이 바로 반영되지않고 재빌드해야 적용됨

#해결:

---
//

<컴포넌트>

react에서 사용자 정의 태그는 대문자로 시작

사용자 정의 태그—>컴포넌트

이런 컴포넌트가 하나의 부품 역할

```jsx
<header>
<h1><a href="/">{props.title}</a></h1>
</header>
```

위의 코드를

```jsx
function Header(props) {
return <header>
<h1><a href="/">{props.title}</a></h1>
</header>
}
```

로 해주고 <Header></Header>하면 사용가능

<prop>

```jsx
<Header title="WEB"></Header>
```

```jsx
function Header(props) {
return <header>
<h1><a href="/">{props.title}</a></h1>
</header>
}
```

입력을 받음

<event>

일정 동작 발생 시켜줌

```jsx
<Header title="WEB" onChangeMode={()=>{
alert('Header');
}}></Header>
```

```jsx
function Header(props) {
return <header>
<h1><a href="/" onClick={(event)=>{
event.preventDefault();
props.onChangeMode();
}}>{props.title}</a></h1>
</header>
}
```

<state>

- prop과 state의 공통점 : 값이 변경되면 새로운 return값이 입력돼서 새로운 ui를 만듦
- prop-컴포넌트 사용하는 외부자를 위한 데이터
- state-컴포넌트를 만드는 내부자를 위한 데이터
